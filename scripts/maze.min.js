const DEFAULT_HEX_SIZE=25,SQRT_3=Math.sqrt(3);var Directions=Object.freeze(["SOUTHEAST","SOUTH","SOUTHWEST","NORTHWEST","NORTH","NORTHEAST"]),Masks=Object.freeze({VISITED:1,CURSOR:2,PATH_SOUTHEAST:4,PATH_SOUTH:8,PATH_SOUTHWEST:16,PATH_NORTHWEST:32,PATH_NORTH:64,PATH_NORTHEAST:128}),ReverseDirectionMasks=Object.freeze({PATH_SOUTHEAST:Masks.PATH_NORTHWEST,PATH_SOUTH:Masks.PATH_NORTH,PATH_SOUTHWEST:Masks.PATH_NORTHEAST,PATH_NORTHWEST:Masks.PATH_SOUTHEAST,PATH_NORTH:Masks.PATH_SOUTH,PATH_NORTHEAST:Masks.PATH_SOUTHWEST}),Neighbors=Object.freeze({SOUTHEAST:[1,0],SOUTH:[0,1],SOUTHWEST:[-1,1],NORTHWEST:[-1,0],NORTH:[0,-1],NORTHEAST:[1,-1]});function getDefaultLineWidth(e){return Math.ceil(e/4)}function getRandomInt(e){return Math.floor(Math.random()*Math.floor(e))}function getNeighborIndex(e,t,r,n,o){var T=qrToIndex(...indexToQRCoords(e,t).map((e,t)=>e+Neighbors[o][t]));return!(T.some(e=>e<0)||T[0]>=r||T[1]>=n)&&T}function indexToQRCoords(e,t){return[e,t-Math.floor(e/2)]}function indexToXY(e,t,r){return qrToXY(...indexToQRCoords(e,t),r)}function qrToIndex(e,t){return[e,t+Math.floor(e/2)]}function qrToXY(e,t,r){return[3*e/2,e*SQRT_3/2+t*SQRT_3].map((e,t)=>(e+[1.5,SQRT_3/2+.1][t])*(r||DEFAULT_HEX_SIZE))}function getHexCorner(e,t,r,n){return[e+r*Math.cos(n*Math.PI/3),t+r*Math.sin(n*Math.PI/3)]}function drawHexFromArray(e,t,r,n,o){var T,a,i,s=o||DEFAULT_HEX_SIZE;for([T,a]=qrToXY(...indexToQRCoords(r,n),s),e.beginPath(),e.moveTo(...getHexCorner(T,a,s,0)),i=1;i<=6;i++)t[r][n]&Masks["PATH_"+Directions[i-1]]?e.moveTo(...getHexCorner(T,a,s,i)):e.lineTo(...getHexCorner(T,a,s,i));e.strokeStyle=t[r][n]&Masks.VISITED?"#000000":"#EE00EE",e.lineWidth=getDefaultLineWidth(s),e.stroke(),t[r][n]&Masks.CURSOR?(e.fillStyle="#00FF00",e.fillRect(T-.25*s,a-.25*s,s/2,s/2)):e.clearRect(T-.26*s,a-.26*s,.52*s,.52*s)}function Maze(e,t,r,n,o){"use strict";if(!e||!e.getContext)throw"Could not initialize Game. Argument must be a valid canvas element.";var T,a=30,i=e,s=i.getContext("2d"),H=(n=n||DEFAULT_HEX_SIZE,[[0,0]]),S=[...Array(t||10)].map(e=>new Uint8Array(r||10).fill(0)),c=!1,A=Date.now(),h=function(e,t){var r,o;[r,o]=indexToXY(e,t,n),s.clearRect(r-1.5*n,o-SQRT_3*n,3*n,2*SQRT_3*n)},E=function(e,o){var T,a;[T,a]=indexToXY(e,o,n),drawHexFromArray(s,S,e,o,n),Directions.map(n=>getNeighborIndex(e,o,t,r,n)).filter((e,t)=>!!e).forEach(e=>{drawHexFromArray(s,S,...e,n)})},R=function(){var e,t;for(e=0;e<S.length;e++)for(t=0;t<S[e].length;t++)drawHexFromArray(s,S,e,t,n)},f=function(){var e=Date.now(),n=e-A;n>1e3/a&&(A=e-n%(1e3/a),function(e){H.length||this.stopGame();var n,o,T,a,i,s=[];for([n,o]=H[H.length-1],h(n,o),S[n][o]|=Masks.VISITED|Masks.CURSOR,T=0;T<Directions.length;T++)!(i=getNeighborIndex(n,o,t,r,Directions[T]))||S[i[0]][i[1]]&Masks.VISITED||s.push([Directions[T],i]);s.length?([a,T]=s[getRandomInt(s.length)],S[n][o]|=Masks["PATH_"+a],S[T[0]][T[1]]|=ReverseDirectionMasks["PATH_"+a],H.push(T)):H.pop(),E(n,o),S[n][o]^=Masks.CURSOR}()),T=requestAnimationFrame(f)};this.startGame=function(){c||(R(),T=requestAnimationFrame(f),c=!0)},this.stopGame=function(){c&&(cancelAnimationFrame(T),c=!1)},this.resetGame=function(){c&&(this.stopGame(),s.clearRect(0,0,i.width,i.height)),H=[[0,0]],S=[...Array(t||10)].map(e=>new Uint8Array(r||10).fill(0)),this.startGame()},this.setPerSecond=function(e){a=e||30},R()}